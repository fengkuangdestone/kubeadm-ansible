---
- name: Set kubeadm_discovery_address
  set_fact:
    kubeadm_discovery_address: >-
      {%- if "127.0.0.1" or "localhost" in kube_apiserver_endpoint -%}
      {{ first_kube_master }}:{{ kube_apiserver_port }}
      {%- else -%}
      {{ kube_apiserver_endpoint }}
      {%- endif %}
  when: not is_kube_master
  tags:
    - facts

- include: nginx-proxy.yml
  when: is_kube_master == false
  tags:
    - nginx

- name: Check if kubelet.conf exists
  stat:
    path: "/etc/kubernetes/kubelet.conf"
  when: not is_kube_master
  register: kubelet_conf

- name: Create kubeadm client config
  template:
    src: kubeadm-client.conf.j2
    dest: "/etc/kubernetes/kubeadm-client.conf"
    backup: yes
  when: not is_kube_master
  register: kubeadm_client_conf

- name: Join to cluster if needed
  environment:
    - KUBE_REPO_PREFIX: "{{kube_image_repo}}"
  command: "kubeadm join --config /etc/kubernetes/kubeadm-client.conf --skip-preflight-checks"
  register: kubeadm_join
  when: not is_kube_master and (kubeadm_client_conf.changed or not kubelet_conf.stat.exists)

- name: Wait for kubelet bootstrap to create config
  wait_for:
    path: "/etc/kubernetes/kubelet.conf"
    delay: 1
    timeout: 60
  when: not is_kube_master

- name: Update server field in kubelet kubeconfig
  replace:
    path: "/etc/kubernetes/kubelet.conf"
    regexp: "https://.*:6443"
    replace: "{{ kube_apiserver_endpoint }}"
    backup: yes
  when: not is_kube_master and kubeadm_discovery_address != kube_apiserver_endpoint
  notify: restart kubelet

- name: Set Master Node schedule
  command: kubectl taint nodes {{inventory_hostname}} node-role.kubernetes.io/master-
  delegate_to: "{{ groups['kube-master']|first }}"
  ignore_errors: yes
  when: inventory_hostname in groups['kube-master'] and inventory_hostname in groups['kube-node']
  
